name: Release

on:
  push:
    branches:
    - main
    tags:
     - 'v*.*.*'
  pull_request:
    types:
      - labeled
env:
  NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages
  DOTNET_VERSION: 8.0.204

jobs:
  bump-version:
    if: github.event.action != 'labeled'
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.clean_version.outputs.version }}
      versioncode: ${{ steps.clean_version.outputs.versioncode }}
    steps:
      - uses: actions/checkout@v2
      # Bump version on merging Pull Requests with specific labels.
      # (bump:major,bump:minor,bump:patch)
      - uses: haya14busa/action-bumpr@v1
        id: bumpr
        with:
          github_token: ${{ github.token }}
          default_bump_level: 'patch'
      - name: clean version
        id: clean_version
        run: |
          v=${{ steps.bumpr.outputs.next_version }}
          v=${v:1}
          echo "version=$v" >> $GITHUB_OUTPUT
          count=$(git rev-list --count HEAD)
          echo "versioncode=$count" >> $GITHUB_OUTPUT

    build:
      needs: [ bump-version, test-service ]
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v3
        - uses: actions/cache@v3
          with:
            path: ${{ github.workspace }}/.nuget/packages
            key: ${{ runner.os }}-nuget-service-${{ hashFiles('**/*.csproj') }}
            restore-keys: |
              ${{ runner.os }}-nuget-
        - name: Setup .NET
          uses: actions/setup-dotnet@v3
          with:
            dotnet-version: ${{ env.DOTNET_VERSION }}
        - name: Setup Local Nuget
          run: |
            rm nuget.config
            mv nuget-local.config nuget.config
        - name: Restore dependencies
          run: |
            dotnet restore
            dotnet tool restore
          working-directory: MegaMill
           - name: Publish service
          run: |
            dotnet build -c Release /p:Version=${{ needs.bump-version.outputs.version }}
            dotnet publish -c Release -o ${{ github.workspace }}/out /p:Version=${{ needs.bump-version.outputs.version }}
